Group {
 inputs 0
 name Point_Grid
 tile_color 0x434343ff
 note_font_color 0x7dadf9ff
 addUserKnob {20 User}
 addUserKnob {26 text l "" +STARTLINE T "Point Grid v1.1\n"}
 addUserKnob {26 divider_general l "<b><font color=#7DADF9>General</font><b>"}
 addUserKnob {41 size_x l "Number of Points" T CONTROLER.size_x}
 addUserKnob {41 size_y l "" -STARTLINE T CONTROLER.size_y}
 addUserKnob {41 size_z l "" -STARTLINE T CONTROLER.size_z}
 addUserKnob {26 divider_transform l "<b><font color=#7DADF9>Transform</font><b>"}
 addUserKnob {6 Position_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 Position_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Position_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {13 translate l Translate}
 addUserKnob {41 rotate l Rotate T Axis1.rotate}
 addUserKnob {41 scaling l Scale T Axis1.scaling}
 addUserKnob {41 uniform_scale l "Uniform scale" T Axis1.uniform_scale}
 addUserKnob {41 skew l Skew T Axis1.skew}
 addUserKnob {6 Scale_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 Scale_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Scale_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
 NoOp {
  inputs 0
  name CONTROLER
  xpos 224
  ypos -62
  addUserKnob {20 User}
  addUserKnob {3 VoxelDensity}
  VoxelDensity {{ceil(pow(size_x*size_y*size_z,1/3))}}
  addUserKnob {3 size_x l "Voxel Grid Size"}
  size_x 15
  addUserKnob {3 size_y l "" -STARTLINE}
  size_y 15
  addUserKnob {3 size_z l "" -STARTLINE}
  size_z 15
 }
 Crop {
  inputs 0
  box {0 0 {ceil(sqrt(pow(parent.CONTROLER.VoxelDensity,3)))} {sqrt(pow(parent.CONTROLER.VoxelDensity,3))}}
  reformat true
  crop false
  name Crop3
  xpos 372
  ypos -189
 }
 BlinkScript {
  recompileCount 9
  ProgramGroup 1
  KernelDescription "2 \"InvertKernel\" iterate pixelWise 21048e0522d3524e03cb582229852f2e33dbe569cd86686b92f460148f8700cf 2 \"src\" Read Point \"dst\" Write Point 1 \"Cube Size\" Int 3 IAAAACAAAAAgAAAAAAAAAA== 1 \"cube_size\" 3 1 0"
  kernelSource "kernel InvertKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;  \n  Image<eWrite> dst;\n\n  param:\n    int3 cube_size;\n\n  local:\n    \n\n  void define() \{\n    defineParam(cube_size, \"Cube Size\", int3(32,32,32));\n  \}\n\n  void init() \{\n    \n  \}\n\n  void process(int2 pos) \{\n    int t_offset = (pos.x+(pos.y*src.bounds.width()));\n    float4 position;\n    float maxSize = max(max(cube_size.x,cube_size.y),cube_size.z);\n\n    position.x = fmod(t_offset,cube_size.x)/float(cube_size.x-1);\n    position.y = fmod(int(t_offset/cube_size.x),cube_size.y)/float(cube_size.y-1);\n    position.z = fmod(int(t_offset/(cube_size.x*cube_size.y)),cube_size.z)/float(cube_size.z-1);\n    position.w = 1-min(fmod(int(t_offset/(cube_size.x*cube_size.y*cube_size.z)),maxSize),1.0f);\n\n    dst() = float4(position.x*position.w,position.y*position.w,position.z*position.w,position.w);\n   \}\n\};\n\n"
  rebuild ""
  "InvertKernel_Cube Size" {{parent.CONTROLER.size_x} {parent.CONTROLER.size_y} {parent.CONTROLER.size_z}}
  rebuild_finalise ""
  name BlinkScript8
  selected true
  xpos 372
  ypos -135
 }
 Grade {
  add -0.5
  black_clamp false
  name Grade1
  xpos 372
  ypos -47
 }
 ColorMatrix {
  matrix {
      {{parent.Axis1.world_matrix.0} {parent.Axis1.world_matrix.1} {parent.Axis1.world_matrix.2}}
      {{parent.Axis1.world_matrix.4} {parent.Axis1.world_matrix.5} {parent.Axis1.world_matrix.6}}
      {{parent.Axis1.world_matrix.8} {parent.Axis1.world_matrix.9} {parent.Axis1.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 372
  ypos 5
 }
 Grade {
  add {{parent.translate.x} {parent.translate.y} {parent.translate.z} 0}
  black_clamp false
  name Grade2
  xpos 372
  ypos 57
 }
add_layer {pos pos.red pos.green pos.blue pos.alpha}
 Shuffle {
  red white
  green white
  blue white
  black red
  white green
  red2 blue
  green2 alpha
  out2 pos
  name Shuffle1
  xpos 372
  ypos 132
 }
 ModifyMetaData {
  metadata {
   {set pointrender/n_points "\[expr \[value parent.size_x]*\[value parent.size_y] *\[value parent.size_z]]"}
   {set pointrender/gen_type 3}
  }
  name SetMetaData
  xpos 372
  ypos 156
 }
 Grade {
  white {{1/((parent.size_x*parent.size_y*parent.size_z)/200000)}}
  black_clamp false
  name Grade9
  xpos 372
  ypos 180
 }
 Crop {
  box {0 0 {ceil(sqrt(pow(parent.CONTROLER.VoxelDensity,3)))} {sqrt(pow(parent.CONTROLER.VoxelDensity,3))}}
  crop false
  name Crop1
  xpos 372
  ypos 204
 }
 Output {
  name Output1
  xpos 372
  ypos 283
 }
 Axis2 {
  inputs 0
  name Axis1
  xpos 513
  ypos -13
 }
end_group
