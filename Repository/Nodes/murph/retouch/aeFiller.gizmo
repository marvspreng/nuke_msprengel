Group {
 name aeFiller
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nw = nuke.root().width()\nh = nuke.root().height()\n\nif k.name() == \"method\":\n    kv = k.value()\n    n\[\"text_path\"].setVisible(kv == \"path\")\n    n.knobs()\[\"translate_path\"].setVisible(kv == \"path\")\n    n.knobs()\[\"center_path\"].setVisible(kv == \"path\")\n    n.knob('center_path').setValue((w/2, h/2,))\n\n    n\[\"text_filler\"].setVisible(kv == \"filler\")\n    n\[\"swidth\"].setVisible(kv == \"filler\")\n    n\[\"sheight\"].setVisible(kv == \"filler\")\n    n\[\"steps\"].setVisible(kv == \"filler\")\n    n\[\"angle\"].setVisible(kv == \"filler\")\n    \n    \n    \nif k.name() in \[\"steps\"]:\n  s = int(k.value())\n  if s<1:\n    k.setValue(1)\n  else:    \n    i = nuke.toNode('Dot1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')  \n    r = int(n\['steps'].value())\n    st = int(1)\n    b0 = nuke.toNode(\"Invert1\")\n    b0x = b0.xpos()\n    b0y = b0.ypos()\n    b0n = b0.name()\n                \n    for n in nuke.allNodes():\n      if n.xpos()>b0.xpos()+5:\n          nuke.delete(n)\n    \n    \n    for x in range(1,r+st,st):\n      #blur1\n      b = nuke.nodes.Blur()\n      b.setInput(0, i)\n      b.setXYpos(b0x+x*100,b0y)\n      b\['size'].setSingleValue(False)\n      b\['size'].setExpression(\"parent.swidth\", 0)\n      b\['size'].setExpression(\"parent.sheight\", 1)\n      #blur2\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2.setXYpos(b0x+x*100,b0y+40)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.swidth\", 0)\n      b2\['size'].setExpression(\"parent.sheight\", 1)\n      #grade1\n      g = nuke.nodes.Grade()\n      g.setXYpos(b0x+x*100,b0y+80)\n      g.setInput(0, b2)\n      g\['channels'].setValue('rgba')\n      g\['blackpoint'].setValue(-0.0001)\n      #Merge1\n      m = nuke.nodes.Merge()\n      m.setXYpos(b0x+x*100,b0y+106)\n      m.setInput(1, b)\n      m.setInput(0, g)\n      m\['operation'].setValue(\"divide\")\n      #Merge2\n      if x < r:\n         m2 = nuke.nodes.Merge()\n         m2.setXYpos(b0x+x*100,b0y+132)\n         m2.setInput(1, b2)\n         m2.setInput(0, g)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m\n      i2 = m2\n    \n    o.setInput(0, i)"
 tile_color 0xa0500ff
 note_font "Verdana Bold Bold Bold Bold"
 note_font_color 0xffffffff
 icon aeFiller_Node.png
 addUserKnob {20 aeFiller}
 addUserKnob {26 "" l "Local GPU:" T ""}
 addUserKnob {26 gpuName l "" -STARTLINE T "GeForce GTX 1080 Ti"}
 addUserKnob {6 useGPUIfAvailable l "Use GPU if available" +STARTLINE}
 useGPUIfAvailable true
 addUserKnob {6 vectorize l "Vectorize on CPU" -STARTLINE}
 vectorize true
 addUserKnob {26 ""}
 addUserKnob {26 text_6_1 l "<b><font color=#ffffff>Mehtod</font><b>"}
 addUserKnob {4 method t "Choose the method to fill the matte:\nFiller use different blurs(in) near the matte.\nPath use a different zone of your plate to fill it." M {filler path "" "" "" "" "" "" "" ""}}
 addUserKnob {4 outmask l "     output mask" t "Select the alpha that you want to output" -STARTLINE M {input matte union "" "" "" "" ""}}
 addUserKnob {41 alpha l "     premult by" t "premultipy by the alpha that you choose." -STARTLINE T Premult2.alpha}
 addUserKnob {26 ""}
 addUserKnob {26 text_path l "<b><font color=#ffffff>Path</font><b>" +HIDDEN}
 addUserKnob {26 text_filler l "<b><font color=#ffffff>Filler</font><b>"}
 addUserKnob {41 translate_path l translate +HIDDEN T Transform4.translate}
 addUserKnob {41 center_path l center +HIDDEN T Transform4.center}
 addUserKnob {7 swidth l width t "Amount of 'in-fill' in the horizon for one iteration. " R 0 10}
 swidth 9
 addUserKnob {7 sheight l height t "Amount of 'in-fill' in the vertical for one iteration. " R 0 10}
 sheight 4
 addUserKnob {3 steps t "Number of blur iterations to combine together."}
 steps 7
 addUserKnob {7 angle t "Adjust the direction of the 'in-fill'." R -180 180}
 addUserKnob {26 ""}
 addUserKnob {26 text l "<b><font color=#ffffff>Detail</font><b>"}
 addUserKnob {7 kernel_size l surface t "Adjust the amount of detail. (With this slide you adjust the low and high frequencies).\n\nIt's important not to raise the value more than 5." R 0 5}
 kernel_size 1
 addUserKnob {7 fine l "fine detail" t "Add extra fine detail if it's neccesary."}
 addUserKnob {26 ""}
 addUserKnob {7 highlights l highlight t "Adjust the range of the highlight to mid lights that you want to rescue.\n\none is the highest values.\ncero is the midtones values."}
 highlights 0.5
 addUserKnob {7 multiply t "Increase the amount of light that you want to rescue." R 0 5}
 multiply 0.25
 addUserKnob {26 ""}
 addUserKnob {26 text_5 l "<b><font color=#ffffff>Displace</font><b>"}
 addUserKnob {7 horizontal t "Displace the detail in horizontal direction to change the original." R -25 25}
 addUserKnob {7 vertical t "Displace the detail in vertical direction to change the original." R -25 25}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannel l mask T Keymix2.maskChannel}
 addUserKnob {6 invert_mask_2 l invert -STARTLINE}
 addUserKnob {41 which l mix T Dissolve1.which}
 addUserKnob {26 ""}
 addUserKnob {26 about_1 l "" +STARTLINE T "<span style=\"color:#666\"><br/><b>aeFiller v1.1</b> - <a  style=\"color:#666;text-decoration: none;\">Aitor Echeveste</a>  © 2020</span>"}
 addUserKnob {20 About}
 addUserKnob {26 text_1 l "" +STARTLINE T "   "}
 addUserKnob {26 text_2 l "" +STARTLINE T "   "}
 addUserKnob {26 text_4 l "" +STARTLINE T "<font color=#ffffff><font size=\"7\">aeFiller</font><font size=\"6\"> v1.1</font>\n"}
 addUserKnob {26 about_1_1 l "" +STARTLINE T "by Aitor Echeveste © 2020"}
 addUserKnob {26 text_1_1 l "" +STARTLINE T "   "}
 addUserKnob {26 ""}
 addUserKnob {26 text_3 l "" +STARTLINE T "   "}
 addUserKnob {26 website l "" +STARTLINE T "<b><a href=\"http://www.aitorecheveste.com\"><span style=\"color:#C8C8C8;\">www.aitorecheveste.com</span></a><b>"}
}
 Constant {
  inputs 0
  channels rgb
  name Constant1
  xpos -12
  ypos -1124
  postage_stamp false
 }
 Input {
  inputs 0
  name img
  xpos -801
  ypos -1384
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
 Dot {
  name Dot22
  note_font_size 41
  xpos -767
  ypos -1312
 }
set N866f6000 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 158
  ypos -1312
 }
 Dot {
  name Dot6
  xpos 158
  ypos -1166
 }
set N866f7800 [stack 0]
 Switch {
  inputs 2
  which {{"!\[exists parent.input]"}}
  name Switch4
  xpos 124
  ypos -1124
 }
 BlinkScript {
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"Median\" iterate componentWise 72e3d871e04a02c4287cf418d70db7783acfa08378ab97e29ad599ff41f78ed2 2 \"imageIn\" Read Ranged2D \"imageOut\" Write Point 2 \"Size_X\" Int 1 AwAAAA== \"Size_Y\" Int 1 AwAAAA== 2 \"x\" 1 1 \"y\" 1 1 3 \"imageInrangeMin\" Int 2 1 AAAAAAAAAAA= \"imageInrangeMax\" Int 2 1 AAAAAAAAAAA= \"_filterSize\" Int 1 1 AAAAAA=="
  kernelSource "kernel Median : public ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> imageIn; \n  Image<eWrite, eAccessPoint> imageOut;          \n\nparam:\n  int x;  //The horizontal radius of the median\n  int y;  //The vertical radius of the median\n\nlocal:\n  int _filterSize;\n  \n  void define() \{\n    defineParam(x, \"Size_X\", 3); \n    defineParam(y, \"Size_Y\", 3); \n  \}\n\n  void init() \{\n    //Set the range we need to access from the source \n\n    imageIn.setRange(-x, -y, x, y);\n    _filterSize = (2 * x + 1) * (2 * y + 1);\n\n  \}\n  void process(int2 pos)\n  \{\n    float vals\[25];\n\n    for (int j = -y, index = 0; j <= y; j++) \{\n      for (int i = -x; i <= x; i++, index++) \{\n        vals\[index] = imageIn(i, j);\n      \}\n    \}\n   \n    //The median function takes an array of floating-point values and an array length.\n    imageOut() = median(vals, _filterSize);\n    \n  \}\n\};"
  rebuild ""
  Median_Size_X {{count.count<6?count.count:5}}
  Median_Size_Y {{count.count<6?count.count:5}}
  rebuild_finalise ""
  name BlinkScript3
  xpos 124
  ypos -1100
 }
 Defocus {
  defocus {{fine}}
  quality 10
  name Defocus1
  xpos 124
  ypos -1057
 }
 Dot {
  name Dot7
  xpos 158
  ypos -960
 }
set Nb1c51000 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -29
  ypos -960
 }
set Nb1c50c00 [stack 0]
 Dot {
  name Dot13
  note_font_size 41
  xpos -161
  ypos -960
 }
set Nb1c50800 [stack 0]
 TransformMasked {
  center {1024 778}
  name Transform4
  xpos -195
  ypos -851
  hide_input true
 }
 Input {
  inputs 0
  name matte
  xpos 352
  ypos -881
  number 1
 }
set Nb1c50000 [stack 0]
 Dot {
  name Dot31
  note_font_size 41
  xpos 199
  ypos -877
 }
set Nb1c51c00 [stack 0]
 Dot {
  name Dot10
  note_font_size 41
  xpos 199
  ypos -795
 }
set Nb1c75c00 [stack 0]
 Dot {
  name Dot18
  note_font_size 41
  xpos 199
  ypos -744
 }
set Nb1c75800 [stack 0]
 Dot {
  name Dot16
  note_font_size 41
  xpos 199
  ypos -683
 }
 Dot {
  name Dot4
  note_font_size 41
  xpos 48
  ypos -683
 }
set Nb1c74c00 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 48
  ypos -406
 }
set Nb1c74800 [stack 0]
 Dot {
  name Dot25
  note_font_size 41
  xpos 48
  ypos 182
 }
 Dot {
  name Dot26
  note_font_size 41
  xpos -603
  ypos 182
 }
set Nb1c74000 [stack 0]
 Dot {
  name Dot27
  note_font_size 41
  xpos -603
  ypos 406
 }
push $Nb1c74000
push $N866f6000
 Dot {
  name Dot29
  note_font_size 41
  xpos -848
  ypos -1312
 }
set Nb1c8b800 [stack 0]
 Dot {
  name Dot23
  note_font_size 41
  xpos -886
  ypos -1312
 }
 Switch {
  inputs 2
  which {{outmask==2?0:outmask x30 0}}
  name Switch2
  xpos -920
  ypos 179
 }
 Dot {
  name Dot24
  note_font_size 41
  xpos -886
  ypos 290
 }
 Input {
  inputs 0
  name mask
  xpos -1001
  ypos 57
  number 2
 }
push $N866f6000
push $Nb1c74c00
push $Nb1c51c00
push $Nb1c50800
 Dot {
  name Dot3
  note_font_size 41
  xpos -271
  ypos -960
 }
set Nb1c8a400 [stack 0]
 Invert {
  name Invert2
  xpos -521
  ypos -970
 }
push $N866f7800
 Dot {
  name Dot14
  note_font_size 41
  xpos 22
  ypos -1166
 }
set Nb1ca1800 [stack 0]
 Dot {
  name Dot8
  xpos -586
  ypos -1169
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge15
  xpos -620
  ypos -965
 }
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue none}
  expr0 r/2
  expr1 g/2
  expr2 b/2
  name Expression1
  xpos -620
  ypos -926
 }
set Nb1ca0c00 [stack 0]
 Dot {
  name Dot33
  note_font_size 41
  xpos -1042
  ypos -923
 }
set Nb1ca0800 [stack 0]
 TransformMasked {
  translate {{horizontal} {vertical}}
  center {960 540}
  name Transform5
  xpos -1076
  ypos -886
 }
push $Nb1ca0800
 Dot {
  name Dot30
  note_font_size 41
  xpos -1159
  ypos -923
 }
 Keymix {
  inputs 3
  name Keymix5
  xpos -1193
  ypos -886
 }
 Dot {
  name Dot32
  note_font_size 41
  xpos -1159
  ypos -683
 }
push $Nb1ca0c00
 Keymix {
  inputs 3
  name Keymix4
  xpos -620
  ypos -692
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -586
  ypos -48
 }
push $Nb1c75800
push $Nb1c8a400
 Keyer {
  operation "luminance key"
  range {{parent.highlights} 1 1 1}
  name LIGHT
  xpos -305
  ypos -850
 }
 Blur {
  channels rgba
  size 1
  name Blur15
  label "\[value size]"
  xpos -305
  ypos -812
 }
 Premult {
  name Premult1
  xpos -305
  ypos -774
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge23
  xpos -305
  ypos -748
 }
push $Nb1c75c00
push $Nb1c50800
 Transform {
  translate {{-translate_path x27 -34} {-translate_path x27 25}}
  center {{parent.center_path x27 0} {parent.center_path x27 0}}
  name control
  xpos -195
  ypos -798
 }
push $Nb1c50c00
 Keymix {
  inputs 3
  name Keymix3
  xpos -65
  ypos -804
 }
 Dot {
  name Dot17
  note_font_size 41
  xpos -31
  ypos -636
 }
set Nb1cf9400 [stack 0]
 Merge2 {
  inputs 2
  operation divide
  name Merge22
  xpos -305
  ypos -640
 }
 Multiply {
  value {{parent.multiply}}
  name Multiply1
  label "\[value value]"
  xpos -305
  ypos -424
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -271
  ypos -133
 }
push $Nb1cf9400
 Dot {
  name Dot35
  xpos -31
  ypos -556
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -31
  ypos -234
 }
push $Nb1c74800
push $Nb1c51000
 Dot {
  name Dot2
  note_font_size 41
  xpos 158
  ypos -629
 }
set Nb1d4bc00 [stack 0]
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  name Transform1
  xpos 234
  ypos -633
 }
push $Nb1c50000
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  xpos 352
  ypos -606
 }
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  name Transform2
  xpos 352
  ypos -580
 }
set Nb1d4b000 [stack 0]
 Merge2 {
  inputs 2
  operation out
  name Merge1
  xpos 234
  ypos -580
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 268
  ypos -503
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur1
  xpos 452
  ypos -514
 }
push $Nb1d4b000
 Clamp {
  name Clamp1
  xpos 352
  ypos -554
 }
 Invert {
  name Invert1
  xpos 352
  ypos -514
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur2
  xpos 452
  ypos -474
 }
set Nf8c1f000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 452
  ypos -434
 }
set N1d692800 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 452
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur3
  xpos 552
  ypos -514
 }
push $Nf8c1f000
push $N1d692800
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 452
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur4
  xpos 552
  ypos -474
 }
set N1e7c7000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 552
  ypos -434
 }
set N1d894000 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 552
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur5
  xpos 652
  ypos -514
 }
push $N1e7c7000
push $N1d894000
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 552
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur6
  xpos 652
  ypos -474
 }
set N1d74b000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 652
  ypos -434
 }
set N1d58f800 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 652
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur7
  xpos 752
  ypos -514
 }
push $N1d74b000
push $N1d58f800
 Merge {
  inputs 2
  operation divide
  name Merge7
  xpos 652
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur8
  xpos 752
  ypos -474
 }
set N3a0e800 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade4
  xpos 752
  ypos -434
 }
set N1db85000 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge8
  xpos 752
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur9
  xpos 852
  ypos -514
 }
push $N3a0e800
push $N1db85000
 Merge {
  inputs 2
  operation divide
  name Merge9
  xpos 752
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur10
  xpos 852
  ypos -474
 }
set N1ecea000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade5
  xpos 852
  ypos -434
 }
set N1d65a400 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge10
  xpos 852
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur11
  xpos 952
  ypos -514
 }
push $N1ecea000
push $N1d65a400
 Merge {
  inputs 2
  operation divide
  name Merge11
  xpos 852
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur12
  xpos 952
  ypos -474
 }
set N1d728c00 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade6
  xpos 952
  ypos -434
 }
set N1e9f5000 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge12
  xpos 952
  ypos -408
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur13
  xpos 1052
  ypos -514
 }
push $N1d728c00
push $N1e9f5000
 Merge {
  inputs 2
  operation divide
  name Merge13
  xpos 952
  ypos -382
 }
 Blur {
  size {{parent.swidth} {parent.sheight}}
  name Blur14
  xpos 1052
  ypos -474
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade7
  xpos 1052
  ypos -434
 }
 Merge {
  inputs 2
  operation divide
  name Merge14
  xpos 1052
  ypos -408
 }
 Transform {
  rotate {{parent.angle*-1}}
  center {2048 1463}
  name Transform3
  xpos 343
  ypos -409
 }
push $Nb1d4bc00
 Keymix {
  inputs 3
  name Keymix1
  xpos 122
  ypos -415
 }
 Crop {
  box {0 0 {input.width} {input.height}}
  name Crop1
  xpos 122
  ypos -379
 }
 Switch {
  inputs 2
  which {{method}}
  name Switch1
  xpos 122
  ypos -237
 }
 Merge2 {
  inputs 2
  operation plus
  mix 0.25
  name Merge24
  xpos 122
  ypos -138
 }
 MergeExpression {
  inputs 2
  expr0 "Ar > .5 ? Br + (2*(Ar-.5)) : Br + 2*Ar -1"
  expr1 "Ag > .5 ? Bg + (2*(Ag-.5)) : Bg + 2*Ag -1"
  expr2 "Ab > .5 ? Bb + (2*(Ab-.5)) : Bb + 2*Ab -1"
  name MergeExpression
  xpos 122
  ypos -51
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 156
  ypos 60
 }
 Keymix {
  inputs 3
  invertMask {{!invert_mask_2}}
  name Keymix2
  xpos -801
  ypos 51
  disable {{"!\[exists parent.input2]"}}
 }
push $Nb1c8b800
 Dot {
  name Dot28
  note_font_size 41
  xpos -848
  ypos 135
 }
 Dissolve {
  inputs 2
  which 1
  name Dissolve1
  xpos -801
  ypos 126
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -801
  ypos 281
  disable {{"\[string first \".a\" \[channels \[input this 1]]]>-1?0:1" x4 1}}
 }
 Remove {
  channels alpha
  name Remove1
  xpos -801
  ypos 319
  disable {{outmask==2?1:!Copy1.disable}}
 }
 ChannelMerge {
  inputs 2
  name ChannelMerge1
  xpos -801
  ypos 391
  disable {{outmask==2?0:1}}
 }
 Premult {
  alpha -rgba.alpha
  name Premult2
  xpos -801
  ypos 443
 }
 Output {
  name Output1
  xpos -801
  ypos 484
 }
push $Nb1ca1800
 NoOp {
  name count
  xpos -12
  ypos -1093
  addUserKnob {20 User}
  addUserKnob {3 count}
  count {{kernel_size<6?clamp(kernel_size,0,5):5}}
 }
end_group
